// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewPathProvider creates a new instance of PathProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPathProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *PathProvider {
	mock := &PathProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// PathProvider is an autogenerated mock type for the PathProvider type
type PathProvider struct {
	mock.Mock
}

type PathProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *PathProvider) EXPECT() *PathProvider_Expecter {
	return &PathProvider_Expecter{mock: &_m.Mock}
}

// CreateTempDir provides a mock function for the type PathProvider
func (_mock *PathProvider) CreateTempDir(prefix string) (string, error) {
	ret := _mock.Called(prefix)

	if len(ret) == 0 {
		panic("no return value specified for CreateTempDir")
	}

	var r0 string
	var r1 error
	if returnFunc, ok := ret.Get(0).(func(string) (string, error)); ok {
		return returnFunc(prefix)
	}
	if returnFunc, ok := ret.Get(0).(func(string) string); ok {
		r0 = returnFunc(prefix)
	} else {
		r0 = ret.Get(0).(string)
	}
	if returnFunc, ok := ret.Get(1).(func(string) error); ok {
		r1 = returnFunc(prefix)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}

// PathProvider_CreateTempDir_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateTempDir'
type PathProvider_CreateTempDir_Call struct {
	*mock.Call
}

// CreateTempDir is a helper method to define mock.On call
//   - prefix string
func (_e *PathProvider_Expecter) CreateTempDir(prefix interface{}) *PathProvider_CreateTempDir_Call {
	return &PathProvider_CreateTempDir_Call{Call: _e.mock.On("CreateTempDir", prefix)}
}

func (_c *PathProvider_CreateTempDir_Call) Run(run func(prefix string)) *PathProvider_CreateTempDir_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *PathProvider_CreateTempDir_Call) Return(s string, err error) *PathProvider_CreateTempDir_Call {
	_c.Call.Return(s, err)
	return _c
}

func (_c *PathProvider_CreateTempDir_Call) RunAndReturn(run func(prefix string) (string, error)) *PathProvider_CreateTempDir_Call {
	_c.Call.Return(run)
	return _c
}
